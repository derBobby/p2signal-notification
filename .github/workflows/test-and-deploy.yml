name: "CD"

on:
  pull_request:
    branches:
      - main
      - staging
    types:
      - closed
  push:
    branches:
      - main
      - staging
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        options:
          - "staging"
          - "production"
        default: "staging"
        description: Environment to which the deployment is done.

jobs:
  set_environment:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.set_env.outputs.environment }}
    steps:
      - name: Determine environment based on event
        id: set_env
        run: |
          if [[ $GITHUB_EVENT_NAME == 'workflow_dispatch' ]]; then
            echo "environment=${{ inputs.environment }}" >> $GITHUB_OUTPUT
          elif [[ $GITHUB_REF == 'refs/heads/main' ]]; then
            echo "environment=production" >> $GITHUB_OUTPUT
          else
            echo "environment=staging" >> $GITHUB_OUTPUT
          fi
  mvn-publish:
    uses: derBobby/java-pipelines/.github/workflows/callable-mvn.yml@v4.0.1
    with:
      mvn-stage: deploy
      cache: true
  codeql:
    needs: mvn-publish
    uses: derBobby/java-pipelines/.github/workflows/callable-codeql.yml@v4.0.1
  docker:
    needs: mvn-publish
    uses: derBobby/java-pipelines/.github/workflows/callable-docker.yml@v4.0.1
    with:
      jar-cache-key: ${{ needs.mvn-publish.outputs.jar-cache-key }}
      app-version: ${{ needs.mvn-publish.outputs.app-version }}
    secrets:
      DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USER }}
      DOCKERHUB_ACCESS_TOKEN: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
      DOCKERHUB_REPOSITORY: ${{ secrets.DOCKERHUB_REPOSITORY }}
  deploy:
    needs:
      - docker
      - set_environment
      - mvn-publish
    uses: derBobby/java-pipelines/.github/workflows/callable-deploy.yml@v4.0.1
    with:
      app: p2signal-notification
      environment: ${{ needs.set_environment.outputs.environment }}
      app-version: ${{ needs.mvn-publish.outputs.app-version }}
    secrets:
      DEPLOYMENT_USER: ${{ secrets.DEPLOYMENT_USER }}
      DEPLOYMENT_HOST: ${{ secrets.DEPLOYMENT_HOST }}
      DEPLOYMENT_PORT: ${{ secrets.DEPLOYMENT_PORT }}
      DEPLOYMENT_SSH_KEY: ${{ secrets.DEPLOYMENT_SSH_KEY }}
