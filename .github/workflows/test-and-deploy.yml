name: "CD"

on:
  pull_request:
    branches: [ main ]
    types:
      - closed
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        options:
          - "staging"
          - "production"
        default: "staging"
        description: Environment to which the deployment is done.

jobs:

  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm install --save-dev semantic-release @semantic-release/changelog @semantic-release/git @semantic-release/github @semantic-release/commit-analyzer @semantic-release/release-notes-generator
      - name: Run Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.SEMANTIC_RELEASE_TOKEN }}
        run: npx semantic-release
      - name: Set version in pom.xml
        run: mvn versions:set -DnewVersion=$(npx semantic-release --dry-run | grep -oP 'next release version is \K[0-9]+\.[0-9]+\.[0-9]+')


  mvn-publish:
    uses: derBobby/java-pipelines/.github/workflows/callable-mvn.yml@main
    with:
      mvn-stage: deploy
      cache: true
  codeql:
    needs: mvn-publish
    uses: derBobby/java-pipelines/.github/workflows/callable-codeql.yml@main
  docker:
    needs: mvn-publish
    uses: derBobby/java-pipelines/.github/workflows/callable-docker.yml@main
    with:
      cache-key: ${{ needs.mvn-publish.outputs.cache-key }}
      environment: ${{ inputs.environment || 'staging' }}
    secrets:
      DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USER }}
      DOCKERHUB_ACCESS_TOKEN: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
      DOCKERHUB_REPOSITORY: ${{ secrets.DOCKERHUB_REPOSITORY }}
  deploy:
    needs: docker
    uses: derBobby/java-pipelines/.github/workflows/callable-deploy.yml@main
    with:
      app: p2signal-notification
      environment: ${{ inputs.environment || 'staging' }}
    secrets:
      DEPLOYMENT_USER: ${{ secrets.DEPLOYMENT_USER }}
      DEPLOYMENT_HOST: ${{ secrets.DEPLOYMENT_HOST }}
      DEPLOYMENT_PORT: ${{ secrets.DEPLOYMENT_PORT }}
      DEPLOYMENT_SSH_KEY: ${{ secrets.DEPLOYMENT_SSH_KEY }}
